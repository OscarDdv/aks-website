name: Build, Push and Deploy to AKS

on:
  push:
    branches: [ main ]
    paths-ignore:
      - 'terraform/**'

env:
  RESOURCE_GROUP: rg-terraform-aks-demo
  AKS_NAME: aks-demo-cluster
  ACR_NAME: acrterraformdemo26039   # update to your ACR name
  IMAGE_NAME: aks-demo
  IMAGE_TAG: latest

jobs:
  terraform:
    uses: ./.github/workflows/terraform.yml
    secrets: inherit
  build-and-deploy:
    name: Build & Deploy App
    runs-on: ubuntu-latest
    needs: terraform
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Login to ACR
        run: |
          az acr login --name ${{ env.ACR_NAME }}

      - name: Build image
        run: |
          docker build -t ${{ env.ACR_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }} ./app

      - name: Push image
        run: |
          docker push ${{ env.ACR_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}

      - name: Set AKS kubeconfig
        uses: azure/aks-set-context@v3
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          resource-group: ${{ env.RESOURCE_GROUP }}
          cluster-name: ${{ env.AKS_NAME }}

      - name: Update manifest with image and deploy
        run: |
          sed -i "s#REPLACE_WITH_IMAGE#${{ env.ACR_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}#g" ./k8s/deployment.yaml
          kubectl apply -f ./k8s

      - name: Wait for rollout
        run: kubectl rollout status deployment/web-deployment --timeout=120s
